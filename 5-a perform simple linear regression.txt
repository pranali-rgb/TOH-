import numpy as np
import matplotlib.pyplot as plt

from sklearn. linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

# Generating some example data
X = np.array ([1, 2, 3, 4, 5]).reshape (-1, 1) # Feature variable
Y = np.array ([2, 4, 5, 4, 5]) # Target variable

# Splitting data into training and testing sets
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=42)

# Initializing the model and training it 
model = LinearRegression ()
model.fit (X_train, Y_train)

# Predicting the results
y_pred = model.predict (X_test)

# Printing the model coefficients
print (f"Intercept: {model.intercept_}")
print (f"Coefficient: {model.coef_}")

# Evaluating the model (Mean Squared Error)
mse = mean_squared_error (X_test, y_pred)
print (f"Mean Squared Error: {mse}")

# Plotting the data and the regression line
plt.scatter(X, Y, color='blue', label='Data points')
plt.plot (X, model. predict (X), color='red', label='Regression Line')
plt.xlabel ('X')
plt. ylabel ('Y')
plt. legend ()
plt.show ()